<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        B9yzk4QAAAAASUVORK5CYII=
</value>
  </data>
</root>